/**
   * @license
   * W.js v1.0.0
   * Released under the MIT License.
   */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).W=e()}(this,(function(){"use strict";function t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function e(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function n(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}function i(t){return i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},i(t)}function r(t,e){return r=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},r(t,e)}function o(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function u(t,e){if(e&&("object"==typeof e||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return o(t)}function c(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=i(t);if(e){var o=i(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return u(this,n)}}var s="data-component",a={},f=function(){function e(n,i,r,o){t(this,e),this.name=n,this.el=i,this.app=r,this.parent=o,this.complete=!1,this.children=[],this.topics=[]}return n(e,[{key:"render",value:function(t,e){this.el.innerHTML=e(t),this.children.forEach((function(t){t.destroyed()})),this.children=[]}},{key:"loadChildren",value:function(t,e){var n=this,i=this.el.querySelectorAll("[data-component]");if(!i||!i.length)return t();var r=i.length,o=0;i.forEach((function(i){var u=i.getAttribute(s),c=new(0,a[u])(u,i,n.app,n);n.children.push(c),c.load((function(){++o===r&&t()}),e)}))}},{key:"load",value:function(t,e){var n=this;e=e||{},this.complete=!1,this.getData((function(i){n.render(i,n.template),n.rendered((function(){n.loadChildren((function(){n.complete=!0,t&&t()}),e)}),e)}),e)}},{key:"destroyed",value:function(){var t=this;this.children.forEach((function(t){t.destroyed()})),this.children=[],this.topics.forEach((function(e){t.app.unsubscribe(e,t)})),this.topics=[]}},{key:"subscribe",value:function(t,e){this.app.subscribe(t,e,this),this.topics.push(t)}},{key:"publish",value:function(t,e){this.app.publish(t,e,this)}},{key:"getData",value:function(t){t&&t(this.data||{})}},{key:"rendered",value:function(t){t&&t()}}]),e}();var l=function(){function e(n){t(this,e),this.name=n,this.topics={}}return n(e,[{key:"start",value:function(t,e){var n=this;window.addEventListener("popstate",(function(t){n.publish("popstate",t)})),new f("",t,this).loadChildren((function(){}),e)}},{key:"publish",value:function(t,e,n){t in this.topics||(this.topics[t]={subscribers:{}});var i=this.topics[t];Object.values(i.subscribers).forEach((function(t){t(e,n)})),i.data=e,i.publisher=n}},{key:"subscribe",value:function(t,e,n){t in this.topics||(this.topics[t]={subscribers:{}});var i=this.topics[t];i.subscribers[n]=e,i.publisher&&e(i.data,i.publisher)}},{key:"unsubscribe",value:function(t,e){t in this.topics&&delete this.topics[t].subscribers[e]}}]),e}();return{app:function(t){return new l(t)},component:function(e,n){var i=function(e){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&r(t,e)}(u,e);var i=c(u);function u(e,r,c,s){var a;return t(this,u),a=i.call(this,e,r,c,s),n.template&&(a.template=n.template),n.init&&n.init.bind(o(a))(),n.getData&&(a.getData=n.getData.bind(o(a))),n.rendered&&(a.rendered=n.rendered.bind(o(a))),a}return u}(f);a[e]=i}}}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
